[{"/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/App.tsx":"1","/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/lecture/GuGudan.tsx":"2","/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/lecture/GuGudanClass.tsx":"3","/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/index.tsx":"4","/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/lecture/WordRelay.tsx":"5","/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/reportWebVitals.ts":"6","/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/lecture/NumberBaseball.tsx":"7"},{"size":232,"mtime":1606224099984,"results":"8","hashOfConfig":"9"},{"size":1275,"mtime":1606220631753,"results":"10","hashOfConfig":"9"},{"size":1803,"mtime":1606225321588,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1606134384679,"results":"12","hashOfConfig":"9"},{"size":1174,"mtime":1606229359871,"results":"13","hashOfConfig":"9"},{"size":425,"mtime":1606225120816,"results":"14","hashOfConfig":"9"},{"size":3626,"mtime":1606406079072,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"187jnn0",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/App.tsx",["31"],"/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/lecture/GuGudan.tsx",[],"/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/lecture/GuGudanClass.tsx",["32","33"],"/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/index.tsx",[],"/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/lecture/WordRelay.tsx",["34","35"],"/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/reportWebVitals.ts",[],"/Users/johyeonjin/develop/2020/project/ts-react-lecture/src/lecture/NumberBaseball.tsx",["36"],"import React, {useCallback, useRef, useState, memo} from \"react\";\n\nexport interface TryInfo {\n    try: string;\n    result: string;\n}\n\nexport interface TryProps {\n    tryInfo: TryInfo;\n}\n\nconst Try: React.FunctionComponent<TryProps> = memo(({tryInfo}) => {\n    return (\n        <li>\n            <div>{tryInfo.try}</div>\n            <div>{tryInfo.result}</div>\n        </li>\n    );\n});\n\nconst getNumbers = () => {\n    const candidates = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const array = [];\n    for (let i = 0; i < 4; i += 1) {\n        const chosen = candidates.splice(Math.floor(Math.random() * (9 - i)), 1)[0];\n        array.push(chosen);\n    }\n    return array;\n};\n\nconst NumberBaseball = () => {\n    const [answer, setAnswer] = useState(getNumbers());\n    const [value, setValue] = useState('');\n    const [result, setResult] = useState('');\n    const [tries, setTries] = useState<TryInfo[]>([]);\n    const inputEl = useRef<HTMLInputElement | null>(null);\n\n    const onSubmitForm = (e: React.FormEvent) => {\n        e.preventDefault();\n        const input = inputEl.current;\n        if (value === answer.join('')) {\n            setTries((t) => ([\n                ...t,\n                {\n                    try: value,\n                    result: '홈런!',\n                },\n            ]));\n            setResult('홈런!');\n            alert('게임을 다시 실행합니다.');\n            setValue('');\n            setAnswer(getNumbers());\n            setTries([]);\n            if (input) {\n                input.focus();\n            }\n        } else {\n            const answerArray = value.split('').map((v) => parseInt(v));\n            let strike = 0;\n            let ball = 0;\n            if (tries.length >= 9) {\n                setResult(`10번 넘게 틀려서 실패! 답은 ${answer.join(',')}였습니다!`); // state set은 비동기\n                alert('게임을 다시 시작합니다.');\n                setValue('');\n                setAnswer(getNumbers());\n                setTries([]);\n                if (input) {\n                    input.focus();\n                }\n            } else {\n                console.log('답은', answer.join(''));\n                for (let i = 0; i < 4; i += 1) {\n                    if (answerArray[i] === answer[i]) {\n                        console.log('strike', answerArray[i], answer[i]);\n                        strike += 1;\n                    } else if (answer.includes(answerArray[i])) {\n                        console.log('ball', answerArray[i], answer.indexOf(answerArray[i]));\n                        ball += 1;\n                    }\n                }\n                setTries(t => ([\n                    ...t,\n                    {\n                        try: value,\n                        result: `${strike} 스트라이크, ${ball} 볼입니다.`,\n                    },\n                ]));\n                setValue('');\n                if (input) {\n                    input.focus();\n                }\n            }\n        }\n    };\n\n\n    return (\n        <> <h1>{result}</h1>\n            <form onSubmit={onSubmitForm}>\n                <input\n                    ref={inputEl}\n                    maxLength={4}\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                />\n                <button>입력!</button>\n            </form>\n            <div>시도: {tries.length}</div>\n            <ul>\n                {tries.map((v, i) => (\n                    <Try key={`${i + 1}차 시도 : ${v.try}`} tryInfo={v}/>\n                ))}\n            </ul>\n        </>\n    )\n}\nexport {NumberBaseball}\n\n\n",{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":1,"column":27,"nodeType":"39","messageId":"40","endLine":1,"endColumn":33},{"ruleId":"37","severity":1,"message":"42","line":1,"column":35,"nodeType":"39","messageId":"40","endLine":1,"endColumn":44},{"ruleId":"43","severity":1,"message":"44","line":23,"column":7,"nodeType":"45","endLine":23,"endColumn":14,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":27,"column":7,"nodeType":"45","endLine":27,"endColumn":20,"suggestions":"48"},{"ruleId":"37","severity":1,"message":"49","line":1,"column":16,"nodeType":"39","messageId":"40","endLine":1,"endColumn":27},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'FormEvent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'word'. Either include it or remove the dependency array.","ArrayExpression",["50"],"React Hook useCallback has unnecessary dependencies: 'value' and 'word'. Either exclude them or remove the dependency array.",["51"],"'useCallback' is defined but never used.",{"desc":"52","fix":"53"},{"desc":"54","fix":"55"},"Update the dependencies array to be: [value, word]",{"range":"56","text":"57"},"Update the dependencies array to be: []",{"range":"58","text":"59"},[680,687],"[value, word]",[823,836],"[]"]